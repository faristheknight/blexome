import 'package:flutter/material.dart';
import 'package:pos/CommonWidgets/blexome.dart';
import 'package:pos/labels.dart';
import 'package:pos/CommonWidgets/heading.dart';
import 'package:pos/constants.dart';
import 'package:pos/screens/LoginSignupScreens/components/text_field_widget.dart';
import 'package:pos/screens/selectLanguagesScreen/components/language_button.dart';

class SignUpFirstPage extends StatefulWidget {
  final TextEditingController firstnameController;
  final TextEditingController surnameController;
  final TextEditingController cnicController;
  final TextEditingController phonenumberController;
  final void Function() onNext;

  SignUpFirstPage({
    required this.firstnameController,
    required this.surnameController,
    required this.cnicController,
    required this.phonenumberController,
    required this.onNext,
  });

  @override
  _SignUpFirstPageState createState() => _SignUpFirstPageState();
}

class _SignUpFirstPageState extends State<SignUpFirstPage> {
  late String firstname;
  late String surname;
  late String cnic;
  late String phoneNumber;

  @override
  void initState() {
    super.initState();
    firstname = widget.firstnameController.text;
    surname = widget.surnameController.text;
    cnic = widget.cnicController.text;
    phoneNumber = widget.phonenumberController.text;

    widget.firstnameController.addListener(() {
      setState(() {
        firstname = widget.firstnameController.text;
      });
    });
    widget.surnameController.addListener(() {
      setState(() {
        surname = widget.surnameController.text;
      });
    });
    widget.cnicController.addListener(() {
      setState(() {
        cnic = widget.cnicController.text;
      });
    });
    widget.phonenumberController.addListener(() {
      setState(() {
        phoneNumber = widget.phonenumberController.text;
      });
    });
  }

  @override
  void dispose() {
    widget.firstnameController.dispose();
    widget.surnameController.dispose();
    widget.cnicController.dispose();
    widget.phonenumberController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: <Widget>[
          Image.asset(
            'assets/backgrounds/bg_image2.png',
            fit: BoxFit.cover,
          ),
          const Padding(
            padding: EdgeInsets.only(top: 100.0),
            child: Column(
              children: [
                BlexoMeHeading(
                  fontSize: 44,
                  fontWeight: FontWeight.bold,
                  blexoColor: kBorderColor1,
                  meColor: kBorderColor2,
                ),
              ],
            ),
          ),
          SafeArea(
            child: Center(
              child: SingleChildScrollView(
                child: Container(
                  padding: const EdgeInsets.all(12.0),
                  decoration: BoxDecoration(
                    color: Colors.white.withOpacity(1),
                    borderRadius: BorderRadius.circular(30.0),
                    boxShadow: const [
                      BoxShadow(
                        color: Colors.black26,
                        blurRadius: 10.0,
                        spreadRadius: 2.0,
                        offset: Offset(2.0, 2.0),
                      ),
                    ],
                  ),
                  width: MediaQuery.of(context).size.width * 0.89,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      SizedBox(
                        height: 50,
                        child: Heading(
                          text: Labels.signup(),
                          fontSize: 24,
                          fontWeight: FontWeight.bold,
                          textColor: kTextColor,
                        ),
                      ),
                      LoginTextFieldsWidget(
                        textInputType: TextInputType.text,
                        text: '',
                        hintText: Labels.name(),
                        onChanged: (value) {
                          setState(() {
                            firstname = value;
                          });
                        },
                        filledColor: Colors.white,
                        borderColor: kBorderColor2,
                        textColor: kTextColor,
                        width: MediaQuery.of(context).size.width * .5,
                        height: 40,
                        borderWidth: 1,
                        borderRadius: BorderRadius.circular(30),
                        fontSize: 14,
                        fontWeight: FontWeight.normal,
                        iconColor: Colors.black,
                        obscureText: false,
                        maxlines: 1,
                        controller: widget.firstnameController,
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 2.0, horizontal: 12.0),
                      ),
                      LoginTextFieldsWidget(
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 2.0, horizontal: 12.0),
                        textInputType: TextInputType.text,
                        text: '',
                        hintText: Labels.surname(),
                        onChanged: (value) {
                          setState(() {
                            surname = value;
                          });
                        },
                        filledColor: Colors.white,
                        borderColor: kBorderColor2,
                        textColor: kTextColor,
                        width: MediaQuery.of(context).size.width * .6,
                        height: 40,
                        borderWidth: 1,
                        borderRadius: BorderRadius.circular(30),
                        fontSize: 14,
                        fontWeight: FontWeight.normal,
                        iconColor: Colors.black,
                        obscureText: false,
                        maxlines: 1,
                        controller: widget.surnameController,
                      ),
                      LoginTextFieldsWidget(
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 2.0, horizontal: 12.0),
                        textInputType: const TextInputType.numberWithOptions(),
                        text: '',
                        hintText: Labels.cnic(),
                        onChanged: (value) {
                          setState(() {
                            cnic = value;
                          });
                        },
                        filledColor: Colors.white,
                        borderColor: kBorderColor2,
                        textColor: kTextColor,
                        width: MediaQuery.of(context).size.width * .7,
                        height: 40,
                        borderWidth: 1,
                        borderRadius: BorderRadius.circular(30),
                        fontSize: 14,
                        fontWeight: FontWeight.normal,
                        iconColor: Colors.black,
                        obscureText: false,
                        maxlines: 1,
                        controller: widget.cnicController,
                      ),
                      LoginTextFieldsWidget(
                        contentPadding: const EdgeInsets.symmetric(
                            vertical: 2.0, horizontal: 12.0),
                        textInputType: const TextInputType.numberWithOptions(),
                        text: '',
                        hintText: Labels.phoneNumber(),
                        onChanged: (value) {
                          setState(() {
                            phoneNumber = value;
                          });
                        },
                        filledColor: Colors.white,
                        borderColor: kBorderColor2,
                        textColor: kTextColor,
                        width: MediaQuery.of(context).size.width * .8,
                        height: 40,
                        borderWidth: 1,
                        borderRadius: BorderRadius.circular(30),
                        fontSize: 14,
                        fontWeight: FontWeight.normal,
                        iconColor: Colors.black,
                        obscureText: false,
                        maxlines: 1,
                        controller: widget.phonenumberController,
                      ),
                      const SizedBox(height: 40.0),
                      Align(
                        alignment: Alignment.bottomRight,
                        child: LanguageButton(
                          text: Labels.next(),
                          onTap: () {
                            if (firstname.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                    content: Text(Labels.nameIsRequired())),
                              );
                            } else if (surname.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                    content: Text(Labels.surnameIsRequired())),
                              );
                            } else if (cnic.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                    content: Text(Labels.cnicIsRequired())),
                              );
                            } else if (phoneNumber.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                    content:
                                        Text(Labels.phoneNumberIsRequired())),
                              );
                            } else {
                              widget.onNext();
                            }
                          },
                          borderColor: kBorderColor2,
                          textColor: kTextColor,
                          width: 120,
                          height: 50,
                          borderWidth: 2,
                          borderRadius: 50,
                        ),
                      ),
                      const SizedBox(height: 50),
                      GestureDetector(
                        onTap: () {
                          print("fuck");
                        },
                        child: const Align(
                          alignment: Alignment.bottomCenter,
                          child: Padding(
                            padding: EdgeInsets.only(bottom: kDefaultPaddin),
                            child: Text(
                              "Already Have an Account?",
                              style: TextStyle(
                                  color: Colors.blue,
                                  fontSize: 18,
                                  decoration: TextDecoration.underline,
                                  decorationColor: Colors.blue),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}


import 'package:flutter/material.dart';
import 'package:pos/CommonWidgets/blexome.dart';
import 'package:pos/CommonWidgets/heading.dart';
import 'package:pos/constants.dart';
import 'package:pos/labels.dart';
import 'package:pos/screens/LoginSignupScreens/components/text_field_widget.dart';
import 'package:pos/screens/selectLanguagesScreen/components/language_button.dart';

class SignUpSecondPage extends StatefulWidget {
  final TextEditingController cityController;
  final void Function() onNext;
  final void Function() onBack;

  SignUpSecondPage({
    required this.onNext,
    required this.onBack,
    required this.cityController,
  });

  @override
  _SignUpSecondPageState createState() => _SignUpSecondPageState();
}

class _SignUpSecondPageState extends State<SignUpSecondPage> {
  late String selectedCountry;
  late String selectedProvince;
  late String city;

  @override
  void initState() {
    super.initState();
    selectedCountry = Labels.pakistan(); // Initialize selectedCountry
    selectedProvince = Labels.punjab(); // Initialize selectedProvince
    city = ''; // Initialize city
    widget.cityController.addListener(() {
      setState(() {
        city = widget.cityController.text;
      });
    });
  }

  @override
  void dispose() {
    widget.cityController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: <Widget>[
          // Background image
          Image.asset(
            'assets/backgrounds/bg_image2.png',
            fit: BoxFit.cover,
          ),
          const Padding(
            padding: EdgeInsets.only(top: 60.0),
            child: Column(
              children: [
                BlexoMeHeading(
                  fontSize: 44,
                  fontWeight: FontWeight.bold,
                  blexoColor: kBorderColor1,
                  meColor: kBorderColor2,
                ),
              ],
            ),
          ),
          Center(
            child: Container(
              padding: const EdgeInsets.all(12.0),
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(1),
                borderRadius: BorderRadius.circular(30.0),
                boxShadow: const [
                  BoxShadow(
                    color: Colors.black26,
                    blurRadius: 10.0,
                    spreadRadius: 2.0,
                    offset: Offset(2.0, 2.0),
                  ),
                ],
              ),
              width: MediaQuery.of(context).size.width * 0.89,
              height: MediaQuery.of(context).size.height * 0.6,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                mainAxisSize: MainAxisSize.min,
                children: [
                  SizedBox(
                    height: 30,
                    child: Heading(
                      text: Labels.signup(),
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                      textColor: kTextColor,
                    ),
                  ),
                  const SizedBox(height: 20),
                  // Dropdown for country
                  DropdownButtonFormField<String>(
                    decoration: InputDecoration(
                      filled: true,
                      fillColor: Colors.white,
                      hintText: Labels.selectCountry(),
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(30),
                        borderSide: const BorderSide(
                          color: kBorderColor2,
                        ),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(30),
                        borderSide: const BorderSide(
                          color: kBorderColor2,
                        ),
                      ),
                    ),
                    value: selectedCountry,
                    items: [Labels.pakistan()].map((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
                    onChanged: (newValue) {
                      setState(() {
                        selectedCountry = newValue!;
                      });
                    },
                  ),
                  const SizedBox(height: 10),
                  // Dropdown for provinces
                  DropdownButtonFormField<String>(
                    decoration: InputDecoration(
                      filled: true,
                      fillColor: Colors.white,
                      hintText: Labels.selectProvince(),
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(30),
                        borderSide: const BorderSide(
                          color: kBorderColor2,
                        ),
                      ),
                      focusedBorder: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(30),
                        borderSide: const BorderSide(
                          color: kBorderColor2,
                        ),
                      ),
                    ),
                    value: selectedProvince,
                    items: [
                      Labels.punjab(),
                      Labels.sindh(),
                      Labels.gilgitBaltistan(),
                      Labels.khyberPakhtunkhwa(),
                      Labels.balochistan()
                    ].map((String value) {
                      return DropdownMenuItem<String>(
                        value: value,
                        child: Text(value),
                      );
                    }).toList(),
                    onChanged: (newValue) {
                      setState(() {
                        selectedProvince = newValue!;
                      });
                    },
                  ),
                  const SizedBox(height: 10),
                  // Text field for city
                  LoginTextFieldsWidget(
                    contentPadding: const EdgeInsets.symmetric(
                        vertical: 16.0, horizontal: 16.0),
                    textInputType: TextInputType.text,
                    text: '',
                    hintText: Labels.city(),
                    onChanged: (value) {
                      setState(() {
                        city = value;
                      });
                    },
                    filledColor: Colors.white,
                    borderColor: kBorderColor2,
                    textColor: kTextColor,
                    width: MediaQuery.of(context).size.width * 0.82,
                    height: 60,
                    borderWidth: 1,
                    borderRadius: BorderRadius.circular(30),
                    fontSize: 14,
                    fontWeight: FontWeight.normal,
                    iconColor: Colors.black,
                    obscureText: false,
                    maxlines: 10,
                    controller: widget.cityController,
                  ),
                  const SizedBox(height: 40.0),
                  Row(
                    children: [
                      Align(
                        alignment: Alignment.bottomLeft,
                        child: LanguageButton(
                          text: Labels.back(),
                          onTap: () {
                            widget.onBack();
                          },
                          borderColor: kBorderColor2,
                          textColor: kTextColor,
                          width: 120,
                          height: 50,
                          borderWidth: 2,
                          borderRadius: 50,
                        ),
                      ),
                      const Spacer(),
                      Align(
                        alignment: Alignment.bottomRight,
                        child: LanguageButton(
                          text: Labels.next(),
                          onTap: () {
                            if (widget.cityController.text.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                SnackBar(
                                    content: Text(Labels.cityIsRequired())),
                              );
                            } else {
                              widget.onNext();
                            }
                          },
                          borderColor: kBorderColor2,
                          textColor: kTextColor,
                          width: 120,
                          height: 50,
                          borderWidth: 2,
                          borderRadius: 50,
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(height: 50),
                  GestureDetector(
                    onTap: () {
                      print("fuck");
                    },
                    child: const Align(
                      alignment: Alignment.bottomCenter,
                      child: Padding(
                        padding: EdgeInsets.only(bottom: kDefaultPaddin),
                        child: Text(
                          "Already Have an Account?",
                          style: TextStyle(
                              color: Colors.blue,
                              fontSize: 18,
                              decoration: TextDecoration.underline,
                              decorationColor: Colors.blue),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}





import 'package:flutter/material.dart';
import 'package:pos/CommonWidgets/blexome.dart';
import 'package:pos/CommonWidgets/heading.dart';
import 'package:pos/constants.dart';
import 'package:pos/labels.dart';
import 'package:pos/screens/LoginSignupScreens/components/text_field_widget.dart';
import 'package:pos/screens/LoginSignupScreens/components/underlined_text.dart';
import 'package:pos/screens/selectLanguagesScreen/components/language_button.dart';

class SignUpThirdPage extends StatefulWidget {
  final TextEditingController emailController;
  final TextEditingController passwordController;
  final TextEditingController passwordconfirmationController;

  final void Function() onNext;
  final void Function() onBack;

  SignUpThirdPage({
    required this.emailController,
    required this.passwordController,
    required this.passwordconfirmationController,
    required this.onBack,
    required this.onNext,
  });

  @override
  _SignUpThirdPageState createState() => _SignUpThirdPageState();
}

class _SignUpThirdPageState extends State<SignUpThirdPage> {
  late String email;
  late String password;
  late String confirmPassword;

  @override
  void initState() {
    super.initState();
    email = widget.emailController.text;
    password = widget.passwordController.text;
    confirmPassword = widget.passwordconfirmationController.text;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        fit: StackFit.expand,
        children: <Widget>[
          // Background image
          Image.asset(
            'assets/backgrounds/bg_image2.png',
            fit: BoxFit.cover,
          ),
          const Padding(
            padding: EdgeInsets.only(top: 100.0),
            child: Column(
              children: [
                BlexoMeHeading(
                  fontSize: 44,
                  fontWeight: FontWeight.bold,
                  blexoColor: kBorderColor2,
                  meColor: kBorderColor2,
                ),
              ],
            ),
          ),
          Center(
            child: Container(
              padding: const EdgeInsets.all(12.0),
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(1),
                borderRadius: BorderRadius.circular(30.0),
                boxShadow: const [
                  BoxShadow(
                    color: Colors.black26,
                    blurRadius: 10.0,
                    spreadRadius: 2.0,
                    offset: Offset(2.0, 2.0),
                  ),
                ],
              ),
              width: MediaQuery.of(context).size.width * 0.89,
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                mainAxisSize: MainAxisSize.min,
                children: [
                  SizedBox(
                    height: 50,
                    child: Heading(
                      text: Labels.signup(),
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                      textColor: kTextColor,
                    ),
                  ),
                  LoginTextFieldsWidget(
                    textInputType: TextInputType.emailAddress,
                    text: '',
                    hintText: Labels.emailOptional(),
                    onChanged: (value) {
                      setState(() {
                        email = value;
                      });
                    },
                    filledColor: Colors.white,
                    borderColor: kBorderColor2,
                    textColor: kTextColor,
                    width: MediaQuery.of(context).size.width * .8,
                    height: 40,
                    borderWidth: 1,
                    borderRadius: BorderRadius.circular(30),
                    fontSize: 14,
                    fontWeight: FontWeight.normal,
                    iconColor: Colors.black,
                    obscureText: false,
                    maxlines: 1,
                    controller: widget.emailController,
                    contentPadding: const EdgeInsets.symmetric(
                        vertical: 2.0, horizontal: 12.0),
                  ),
                  const SizedBox(height: 10),
                  LoginTextFieldsWidget(
                    contentPadding: const EdgeInsets.symmetric(
                        vertical: 2.0, horizontal: 12.0),
                    textInputType: TextInputType.text,
                    text: '',
                    hintText: Labels.password(),
                    onChanged: (value) {
                      setState(() {
                        password = value;
                      });
                    },
                    filledColor: Colors.white,
                    borderColor: kBorderColor2,
                    textColor: kTextColor,
                    width: MediaQuery.of(context).size.width * .6,
                    height: 40,
                    borderWidth: 1,
                    borderRadius: BorderRadius.circular(30),
                    fontSize: 14,
                    fontWeight: FontWeight.normal,
                    iconColor: Colors.black,
                    obscureText: true,
                    maxlines: 1,
                    controller: widget.passwordController,
                  ),
                  const SizedBox(height: 10),
                  LoginTextFieldsWidget(
                    contentPadding: const EdgeInsets.symmetric(
                        vertical: 2.0, horizontal: 12.0),
                    textInputType: TextInputType.text,
                    text: '',
                    hintText: Labels.confirmPassword(),
                    onChanged: (value) {
                      setState(() {
                        confirmPassword = value;
                      });
                    },
                    filledColor: Colors.white,
                    borderColor: kBorderColor2,
                    textColor: kTextColor,
                    width: MediaQuery.of(context).size.width * .6,
                    height: 40,
                    borderWidth: 1,
                    borderRadius: BorderRadius.circular(30),
                    fontSize: 14,
                    fontWeight: FontWeight.normal,
                    iconColor: Colors.black,
                    obscureText: true,
                    maxlines: 1,
                    controller: widget.passwordconfirmationController,
                  ),
                  const SizedBox(height: 40.0),
                  Row(
                    children: [
                      Align(
                        alignment: Alignment.bottomLeft,
                        child: LanguageButton(
                          text: Labels.back(),
                          onTap: widget.onBack,
                          borderColor: kBorderColor2,
                          textColor: kTextColor,
                          width: 120,
                          height: 50,
                          borderWidth: 2,
                          borderRadius: 50,
                        ),
                      ),
                      const Spacer(),
                      Align(
                        alignment: Alignment.bottomRight,
                        child: LanguageButton(
                          text: Labels.next(),
                          onTap: () {
                            if (password.isEmpty) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                const SnackBar(
                                    content: Text('Password is required')),
                              );
                            } else if (password != confirmPassword) {
                              ScaffoldMessenger.of(context).showSnackBar(
                                const SnackBar(
                                    content: Text('Passwords do not match')),
                              );
                            } else {
                              widget.onNext();
                            }
                          },
                          borderColor: kBorderColor2,
                          textColor: kTextColor,
                          width: 120,
                          height: 50,
                          borderWidth: 2,
                          borderRadius: 50,
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(height: 40),
                  GestureDetector(
                    onTap: () {
                      print("fuck");
                    },
                    child: Align(
                      alignment: Alignment.bottomCenter,
                      child: Padding(
                        padding: const EdgeInsets.only(bottom: kDefaultPaddin),
                        child: Text(
                          Labels.alreadyHaveAnAccount(),
                          style: const TextStyle(
                              color: Colors.blue,
                              fontSize: 18,
                              decoration: TextDecoration.underline,
                              decorationColor: Colors.blue),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}




